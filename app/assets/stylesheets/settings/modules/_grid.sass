// min-width
$screen-xs-min: $small-phone-min-width
$screen-sm-min: $phone-min-width
$screen-md-min: $tablet-min-width
$screen-lg-min: $desktop-min-width
$screen-xl-min: $wide-desktop-min-width

////////////////

=make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}"
  #{$list}
    position: relative
    // Prevent columns from collapsing when empty
    min-height: 1px
    // Inner gutter via padding
    padding-left:  ceil(($grid-gutter-width / 2))
    padding-right: floor(($grid-gutter-width / 2))ï½“

=float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-#{$class}-#{$i}"
  #{$list}
    float: left


=calc-grid-column($index, $class, $type)
  @if ($type == width) and ($index > 0)
    .col-#{$class}-#{$index}
      width: percentage(($index / $grid-columns))
    @if ($type == push) and ($index > 0)
    .col-#{$class}-push-#{$index}
      left: percentage(($index / $grid-columns))
    @if ($type == push) and ($index == 0)
    .col-#{$class}-push-0
      left: auto
    @if ($type == pull) and ($index > 0)
    .col-#{$class}-pull-#{$index}
      right: percentage(($index / $grid-columns))
    @if ($type == pull) and ($index == 0)
    .col-#{$class}-pull-0
      right: auto
    @if ($type == offset)
    .col-#{$class}-offset-#{$index}
      margin-left: percentage(($index / $grid-columns))

=loop-grid-columns($columns, $class, $type)
  @for $i from 0 through $columns
    +calc-grid-column($i, $class, $type)

=make-grid($class)
  +float-grid-columns($class)
  +loop-grid-columns($grid-columns, $class, width)
  +loop-grid-columns($grid-columns, $class, pull)
  +loop-grid-columns($grid-columns, $class, push)
  +loop-grid-columns($grid-columns, $class, offset)

// Centered container element
=container-fixed($gutter: $grid-gutter-width)
  +margin(horizontal, auto)
  +padding(horizontal, $gutter / 2)
  +clearfix

// Creates a wrapper for a series of columns
=make-row($gutter: $grid-gutter-width)
  margin-left: ceil($gutter / -2)
  margin-right: floor($gutter / -2)
  +clearfix

// Generate the extra small columns
=make-xs-column($columns, $gutter: $grid-gutter-width)
  position: relative
  float: left
  width: percentage($columns / $grid-columns)
  min-height: 1px
  +padding(horizontal, $gutter / 2)

=make-xs-column-offset($columns)
  margin-left: percentage($columns / $grid-columns)

=make-xs-column-push($columns)
  left: percentage($columns / $grid-columns)

=make-xs-column-pull($columns)
  right: percentage($columns / $grid-columns)

// Generate the small columns
=make-sm-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  +padding(horizontal, $gutter / 2)
  @media (min-width: $screen-sm-min)
    float: left
    width: percentage($columns / $grid-columns)

=make-sm-column-offset($columns)
  @media (min-width: $screen-sm-min)
    margin-left: percentage($columns / $grid-columns)

=make-sm-column-push($columns)
  @media (min-width: $screen-sm-min)
    left: percentage($columns / $grid-columns)

=make-sm-column-pull($columns)
  @media (min-width: $screen-sm-min)
    right: percentage($columns / $grid-columns)

// Generate the medium columns
=make-md-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  +padding(horizontal, $gutter / 2)
  @media (min-width: $screen-md-min)
    float: left
    width: percentage($columns / $grid-columns)

=make-md-column-offset($columns)
  @media (min-width: $screen-md-min)
    margin-left: percentage($columns / $grid-columns)

=make-md-column-push($columns)
  @media (min-width: $screen-md-min)
    left: percentage($columns / $grid-columns)

=make-md-column-pull($columns)
  @media (min-width: $screen-md-min)
    right: percentage($columns / $grid-columns)

// Generate the large columns
=make-lg-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  +padding(horizontal, $gutter / 2)
  @media (min-width: $screen-lg-min)
    float: left
    width: percentage($columns / $grid-columns)

=make-lg-column-offset($columns)
  @media (min-width: $screen-lg-min)
    margin-left: percentage($columns / $grid-columns)

=make-lg-column-push($columns)
  @media (min-width: $screen-lg-min)
    left: percentage($columns / $grid-columns)

=make-lg-column-pull($columns)
  @media (min-width: $screen-lg-min)
    right: percentage($columns / $grid-columns)

=make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}"
  #{$list}
    position: relative
    // Prevent columns from collapsing when empty
    min-height: 1px
    // Inner gutter via padding
    padding-left:  ceil(($grid-gutter-width / 2))
    padding-right: floor(($grid-gutter-width / 2))

=float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-#{$class}-#{$i}"
  #{$list}
    float: left

=calc-grid-column($index, $class, $type)
  @if ($type == width) and ($index > 0)
    .col-#{$class}-#{$index}
      width: percentage(($index / $grid-columns))
    @if ($type == push) and ($index > 0)
    .col-#{$class}-push-#{$index}
      left: percentage(($index / $grid-columns))
    @if ($type == push) and ($index == 0)
    .col-#{$class}-push-0
      left: auto
    @if ($type == pull) and ($index > 0)
    .col-#{$class}-pull-#{$index}
      right: percentage(($index / $grid-columns))
    @if ($type == pull) and ($index == 0)
    .col-#{$class}-pull-0
      right: auto
    @if ($type == offset)
    .col-#{$class}-offset-#{$index}
      margin-left: percentage(($index / $grid-columns))

=loop-grid-columns($columns, $class, $type)
  @for $i from 0 through $columns
    +calc-grid-column($i, $class, $type)

=make-grid($class)
  +float-grid-columns($class)
  +loop-grid-columns($grid-columns, $class, width)
  +loop-grid-columns($grid-columns, $class, pull)
  +loop-grid-columns($grid-columns, $class, push)
  +loop-grid-columns($grid-columns, $class, offset)

//////////////////////

.container
  max-width: 1120px
  +margin(horizontal, auto)
  +padding(horizontal, $grid-gutter-width / 2)

.row
  +make-row

+make-grid-columns
+make-grid(xs)
@media (min-width: $screen-sm-min)
  +make-grid(sm)
@media (min-width: $screen-md-min)
  +make-grid(md)
@media (min-width: $screen-lg-min)
  +make-grid(lg)
@media (min-width: $screen-xl-min)
  +make-grid(xl)

=grid($gutter-size)
  &.row
    +margin(horizontal, $gutter-size/2 * -1)
    >*
      +padding(horizontal, $gutter-size/2)

.row
  @for $i from 0 through 20
    &.is-gutter-#{$i * 4}px
      +margin(horizontal, ($i * 4px) / -2)
      *[class^="col-"]
        +padding(horizontal, ($i * 4px) / 2)
